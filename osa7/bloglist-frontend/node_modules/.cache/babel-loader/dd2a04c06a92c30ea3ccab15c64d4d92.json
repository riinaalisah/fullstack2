{"ast":null,"code":"var _jsxFileName = \"/home/alisa/fullstack/osa7/bloglist-frontend/src/components/Bloglist.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Notification from './Notification';\nimport Togglable from './Togglable';\nimport BlogForm from './BlogForm';\nimport { useField } from '../hooks/useField';\nimport { setAndResetNotification } from '../reducers/notificationReducer';\nimport { addLike, createBlog, deleteBlog } from '../reducers/blogReducer';\nimport { Table, Container, Header } from 'semantic-ui-react';\n\nconst Bloglist = props => {\n  const title = useField('text');\n  const author = useField('text');\n  const url = useField('text');\n  const blogFormRef = React.createRef();\n\n  const setSuccessMessage = message => {\n    props.setAndResetNotification({\n      message: message,\n      type: 'success'\n    });\n  };\n\n  const setErrorMessage = message => {\n    props.setAndResetNotification({\n      message: message,\n      type: 'error'\n    });\n  };\n\n  const createBlog = async event => {\n    event.preventDefault();\n    blogFormRef.current();\n    const blogObject = {\n      title: title.value,\n      author: author.value,\n      url: url.value\n    };\n\n    try {\n      props.createBlog(blogObject);\n      title.reset();\n      author.reset();\n      url.reset();\n      setSuccessMessage(\"A new blog '\".concat(blogObject.title, \"' by \").concat(blogObject.author, \" was added\"));\n    } catch (exception) {\n      setErrorMessage(exception.message);\n    }\n  };\n\n  const blogForm = () => {\n    return React.createElement(Togglable, {\n      buttonLabel: \"new blog\",\n      ref: blogFormRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(BlogForm, {\n      title: title,\n      author: author,\n      url: url,\n      onSubmit: createBlog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  };\n\n  const sortByLikes = () => {\n    props.blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    });\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Blog list\"), React.createElement(Notification, {\n    type: props.notification.type,\n    message: props.notification.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), blogForm(), sortByLikes(), React.createElement(Table, {\n    striped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.blogs.map(blog => React.createElement(Table.Row, {\n    key: blog.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Link, {\n    style: {\n      padding: 5\n    },\n    to: \"/blogs/\".concat(blog.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, blog.title)))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    loggedIn: state.loggedIn,\n    notification: state.notification\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addLike,\n  setAndResetNotification,\n  createBlog,\n  deleteBlog\n})(Bloglist);","map":{"version":3,"sources":["/home/alisa/fullstack/osa7/bloglist-frontend/src/components/Bloglist.js"],"names":["React","connect","Link","Notification","Togglable","BlogForm","useField","setAndResetNotification","addLike","createBlog","deleteBlog","Table","Container","Header","Bloglist","props","title","author","url","blogFormRef","createRef","setSuccessMessage","message","type","setErrorMessage","event","preventDefault","current","blogObject","value","reset","exception","blogForm","sortByLikes","blogs","sort","a","b","likes","notification","map","blog","id","padding","mapStateToProps","state","loggedIn"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Notification from './Notification'\nimport Togglable from './Togglable'\nimport BlogForm from './BlogForm'\n\nimport { useField } from '../hooks/useField'\n\nimport { setAndResetNotification } from '../reducers/notificationReducer'\nimport { addLike, createBlog, deleteBlog } from '../reducers/blogReducer'\n\nimport { Table, Container, Header } from 'semantic-ui-react'\n\n\nconst Bloglist = (props) => {\n\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n\n  const blogFormRef = React.createRef()\n\n  const setSuccessMessage = (message) => {\n    props.setAndResetNotification({\n      message: message,\n      type: 'success'\n    })\n  }\n\n  const setErrorMessage = (message) => {\n    props.setAndResetNotification({\n      message: message,\n      type: 'error'\n    })\n  }\n\n  const createBlog = async (event) => {\n    event.preventDefault()\n    blogFormRef.current()\n    const blogObject = {\n      title: title.value,\n      author: author.value,\n      url: url.value\n    }\n\n    try {\n      props.createBlog(blogObject)\n      title.reset()\n      author.reset()\n      url.reset()\n      setSuccessMessage(`A new blog '${blogObject.title}' by ${blogObject.author} was added`)\n    } catch(exception) {\n      setErrorMessage(exception.message)\n    }\n  }\n\n  const blogForm = () => {\n    return (\n      <Togglable buttonLabel='new blog' ref={blogFormRef}>\n        <BlogForm\n          title={title}\n          author={author}\n          url={url}\n          onSubmit={createBlog}\n        />\n      </Togglable>\n    )\n  }\n\n  const sortByLikes = () => {\n    props.blogs.sort((a, b) => {\n      return b.likes - a.likes\n    })\n  }\n\n  return (\n    <Container>\n      <Header as='h1'>Blog list</Header>\n      <Notification type={props.notification.type} message={props.notification.message} />\n      {blogForm()}\n      {sortByLikes()}\n      <Table striped>\n        <Table.Body>\n          {props.blogs.map(blog =>\n            <Table.Row key={blog.id}>\n              <Table.Cell>\n                <Link style={{ padding: 5 }} to={`/blogs/${blog.id}`}>\n                  {blog.title}\n                </Link>\n              </Table.Cell>\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    loggedIn: state.loggedIn,\n    notification: state.notification\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { addLike,\n    setAndResetNotification,\n    createBlog,\n    deleteBlog\n  })(Bloglist)"]},"metadata":{},"sourceType":"module"}