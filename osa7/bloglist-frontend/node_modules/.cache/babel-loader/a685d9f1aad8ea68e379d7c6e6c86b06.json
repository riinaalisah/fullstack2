{"ast":null,"code":"var _jsxFileName = \"/home/alisa/fullstack/osa7/bloglist-frontend/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport Users from './components/Users';\nimport User from './components/User';\nimport Bloglist from './components/Bloglist';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { useField } from './hooks/useField';\nimport { setAndResetNotification } from './reducers/notificationReducer';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { initializeUsers } from './reducers/userReducer';\nimport { loginUser, logoutUser } from './reducers/loginReducer';\nimport { Container, Menu, Button } from 'semantic-ui-react';\nimport Home from './components/Home';\n\nconst App = props => {\n  const username = useField('text');\n  const password = useField('password');\n  useEffect(() => {\n    props.initializeBlogs();\n  }, []);\n  useEffect(() => {\n    props.initializeUsers();\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      props.loginUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  /*\n  const loginForm = () => {\n    return (\n      <LoginForm\n        username={username}\n        password={password}\n        handleSubmit={handleLogin}\n      />\n    )\n  }\n  */\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      props.loginUser(user);\n    } catch (exception) {\n      props.setAndResetNotification({\n        message: 'Wrong username or password',\n        type: 'error'\n      });\n    }\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBloglistUser');\n    props.logoutUser();\n  };\n\n  const userById = id => props.users.find(user => user.id === id);\n\n  const blogsByUserId = id => props.blogs.filter(blog => blog.user.id === id);\n\n  const blogById = id => props.blogs.find(blog => blog.id === id);\n  /*\n  if (props.loggedIn === null) {\n    return (\n      <Container>\n        <h1>Blog list app</h1>\n        <Notification type={props.notification.type} message={props.notification.message} />\n        {loginForm()}\n      </Container>\n    )\n  }\n  */\n\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    name: \"blogs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Link, {\n    style: {\n      padding: 5\n    },\n    to: \"/blogs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"blogs\")), React.createElement(Menu.Item, {\n    name: \"users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Link, {\n    style: {\n      padding: 5\n    },\n    to: \"/users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"users\")), props.loggedIn !== null ? React.createElement(Menu.Item, {\n    name: \"logged in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, props.loggedIn.name, \" logged in\", React.createElement(Button, {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"logout\")) : React.createElement(Menu.Item, {\n    name: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Link, {\n    style: {\n      padding: 5\n    },\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"log in\"))), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => props.loggedIn ? React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }) : React.createElement(LoginForm, {\n      username: username,\n      password: password,\n      handleSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/blogs\",\n    render: () => props.loggedIn ? React.createElement(Bloglist, {\n      handleLogout: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/users\",\n    render: () => props.loggedIn ? React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/users/:id\",\n    render: ({\n      match\n    }) => React.createElement(User, {\n      user: userById(match.params.id),\n      blogs: blogsByUserId(match.params.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/blogs/:id\",\n    render: ({\n      match\n    }) => React.createElement(Blog, {\n      blog: blogById(match.params.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    loggedIn: state.loggedIn,\n    notification: state.notification,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initializeBlogs,\n  initializeUsers,\n  setAndResetNotification,\n  loginUser,\n  logoutUser\n})(App);","map":{"version":3,"sources":["/home/alisa/fullstack/osa7/bloglist-frontend/src/App.js"],"names":["React","useEffect","connect","BrowserRouter","Router","Route","Link","Redirect","Notification","LoginForm","Users","User","Bloglist","Blog","blogService","loginService","useField","setAndResetNotification","initializeBlogs","initializeUsers","loginUser","logoutUser","Container","Menu","Button","Home","App","props","username","password","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","message","type","handleLogout","removeItem","userById","id","users","find","blogsByUserId","blogs","filter","blog","blogById","padding","loggedIn","name","match","params","mapStateToProps","state","notification"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\n\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Users from './components/Users'\nimport User from './components/User'\nimport Bloglist from './components/Bloglist'\nimport Blog from './components/Blog'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport { useField } from './hooks/useField'\nimport { setAndResetNotification } from './reducers/notificationReducer'\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { initializeUsers } from './reducers/userReducer'\nimport { loginUser, logoutUser } from './reducers/loginReducer'\n\nimport { Container, Menu, Button } from 'semantic-ui-react'\nimport Home from './components/Home'\n\nconst App = (props) => {\n\n  const username = useField('text')\n  const password = useField('password')\n\n  useEffect(() => {\n    props.initializeBlogs()\n  }, [])\n\n  useEffect(() => {\n    props.initializeUsers()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      props.loginUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  /*\n  const loginForm = () => {\n    return (\n      <LoginForm\n        username={username}\n        password={password}\n        handleSubmit={handleLogin}\n      />\n    )\n  }\n  */\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBloglistUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      props.loginUser(user)\n    } catch(exception) {\n      props.setAndResetNotification({\n        message: 'Wrong username or password',\n        type: 'error'\n      })\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBloglistUser')\n    props.logoutUser()\n  }\n\n  const userById = (id) =>\n    props.users.find(user => user.id === id)\n\n  const blogsByUserId = (id) =>\n    props.blogs.filter(blog => blog.user.id === id)\n\n  const blogById = (id) =>\n    props.blogs.find(blog => blog.id === id)\n\n  /*\n  if (props.loggedIn === null) {\n    return (\n      <Container>\n        <h1>Blog list app</h1>\n        <Notification type={props.notification.type} message={props.notification.message} />\n        {loginForm()}\n      </Container>\n    )\n  }\n  */\n\n  return (\n    <Container>\n      <Router>\n        <div>\n          <Menu>\n            <Menu.Item name='blogs'>\n              <Link style={{ padding: 5 }} to='/blogs'>blogs</Link>\n            </Menu.Item>\n            <Menu.Item name='users'>\n              <Link style={{ padding: 5 }} to='/users'>users</Link>\n            </Menu.Item>\n            {props.loggedIn !== null\n              ? <Menu.Item name='logged in'>\n                {props.loggedIn.name} logged in\n                <Button onClick={handleLogout}>logout</Button>\n              </Menu.Item>\n              : <Menu.Item name='login'>\n                <Link style={{ padding: 5 }} to='/login'>log in</Link>\n              </Menu.Item>\n            }\n          </Menu>\n          <Route exact path='/' render={() => <Home />} />\n          <Route exact path='/login' render={() =>\n            props.loggedIn ? <Redirect to='/home' /> : <LoginForm\n              username={username}\n              password={password}\n              handleSubmit={handleLogin}\n            />\n          } />\n          <Route exact path='/blogs' render={() =>\n            props.loggedIn ? <Bloglist handleLogout={handleLogout} />\n              : <Redirect to='/login' />\n          } />\n          <Route exact path='/users' render={() =>\n            props.loggedIn ? <Users /> : <Redirect to='/login' />\n          } />\n          <Route exact path='/users/:id' render={({ match }) =>\n            <User user={userById(match.params.id)} blogs={blogsByUserId(match.params.id)} />\n          } />\n          <Route exact path='/blogs/:id' render={({ match }) =>\n            <Blog blog={blogById(match.params.id)} />\n          } />\n        </div>\n      </Router>\n    </Container>\n  )\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    loggedIn: state.loggedIn,\n    notification: state.notification,\n    users: state.users\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { initializeBlogs,\n    initializeUsers,\n    setAndResetNotification,\n    loginUser,\n    logoutUser })(App)"]},"metadata":{},"sourceType":"module"}