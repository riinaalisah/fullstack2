{"ast":null,"code":"import _defineProperty from \"/home/alisa/fullstack/osa7/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/alisa/fullstack/osa7/bloglist-frontend/src/components/Blog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setAndResetNotification } from '../reducers/notificationReducer';\nimport { addLike, addComment } from '../reducers/blogReducer';\nimport { useField } from '../hooks/useField';\nimport { Container, Header, Input, Button, List } from 'semantic-ui-react';\n\nconst Blog = props => {\n  const comment = useField('text');\n  const blog = props.blog;\n  console.log(blog.user);\n\n  if (!blog) {\n    return null;\n  }\n\n  const addLike = async event => {\n    event.preventDefault();\n\n    const blogToUpdate = _objectSpread({}, blog, {\n      likes: blog.likes + 1,\n      user: blog.user,\n      id: blog.id\n    });\n\n    try {\n      props.addLike(blogToUpdate);\n      return;\n    } catch (exception) {\n      props.setAndResetNotification({\n        message: exception.message,\n        type: 'error'\n      });\n    }\n  };\n\n  const addComment = async event => {\n    event.preventDefault();\n    await props.addComment(blog.id, comment.value);\n    document.getElementById('commentInput').value = '';\n    comment.reset();\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, blog.title, \" by \", blog.author), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(List.Icon, {\n    name: \"linkify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, blog.url)), React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(List.Icon, {\n    verticalAlign: \"middle\",\n    name: \"thumbs up outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.blog.likes, \" likes\", React.createElement(Button, {\n    onClick: addLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"like\"))), React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(List.Icon, {\n    name: \"user outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"added by \", blog.user.name))), React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"commentInput\",\n    type: comment.type,\n    onChange: comment.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: addComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"add comment\")), React.createElement(List, {\n    bulleted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, blog.comments.map(comment => React.createElement(List.Item, {\n    key: blog.comments.indexOf(comment),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, comment))));\n};\n\nexport default connect(null, {\n  addLike,\n  addComment,\n  setAndResetNotification\n})(Blog);","map":{"version":3,"sources":["/home/alisa/fullstack/osa7/bloglist-frontend/src/components/Blog.js"],"names":["React","connect","setAndResetNotification","addLike","addComment","useField","Container","Header","Input","Button","List","Blog","props","comment","blog","console","log","user","event","preventDefault","blogToUpdate","likes","id","exception","message","type","value","document","getElementById","reset","title","author","url","name","onChange","comments","map","indexOf"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { setAndResetNotification } from '../reducers/notificationReducer'\nimport { addLike, addComment } from '../reducers/blogReducer'\nimport { useField } from '../hooks/useField'\nimport { Container, Header, Input, Button, List } from 'semantic-ui-react'\n\nconst Blog = (props) => {\n  const comment = useField('text')\n  const blog = props.blog\n  console.log(blog.user)\n\n  if (!blog) {\n    return null\n  }\n\n  const addLike = async (event) => {\n    event.preventDefault()\n    const blogToUpdate = {\n      ...blog,\n      likes: blog.likes + 1,\n      user: blog.user,\n      id: blog.id\n    }\n    try {\n      props.addLike(blogToUpdate)\n      return\n    } catch(exception) {\n      props.setAndResetNotification({\n        message: exception.message,\n        type: 'error'\n      })\n    }\n  }\n\n  const addComment = async (event) => {\n    event.preventDefault()\n    await props.addComment(blog.id, comment.value)\n    document.getElementById('commentInput').value = ''\n    comment.reset()\n  }\n\n  return (\n    <Container>\n      <Header as='h2'>{blog.title} by {blog.author}</Header>\n      <List>\n        <List.Item>\n          <List.Icon name='linkify' />\n          <List.Content>{blog.url}</List.Content>\n        </List.Item>\n        <List.Item>\n          <List.Icon verticalAlign='middle' name='thumbs up outline' />\n          <List.Content>\n            {props.blog.likes} likes\n            <Button onClick={addLike}>like</Button>\n          </List.Content>\n        </List.Item>\n        <List.Item>\n          <List.Icon name='user outline' />\n          <List.Content>added by {blog.user.name}</List.Content>\n        </List.Item>\n      </List>\n      <Header as='h3'>Comments</Header>\n      <div>\n        <Input id='commentInput' type={comment.type} onChange={comment.onChange} />\n        <Button onClick={addComment}>add comment</Button>\n      </div>\n      <List bulleted>\n        {blog.comments.map(comment =>\n          <List.Item key={blog.comments.indexOf(comment)}>{comment}</List.Item>\n        )}\n      </List>\n    </Container>\n  )\n}\n\n\nexport default connect(null, { addLike, addComment, setAndResetNotification })(Blog)"]},"metadata":{},"sourceType":"module"}