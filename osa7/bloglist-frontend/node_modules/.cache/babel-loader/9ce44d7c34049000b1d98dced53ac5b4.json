{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_BLOG':\n      return state.concat(action.data);\n\n    case 'INIT_BLOGS':\n      state = action.data;\n      return state;\n\n    case 'ADD_LIKE':\n      return state.map(blog => blog.id === action.data.id ? action.data : blog);\n\n    case 'ADD_COMMENT':\n      return state.map(blog => blog.id === action.data.id ? action.data : blog);\n\n    case 'DELETE_BLOG':\n      return state;\n\n    case 'SET_BLOG':\n      state = action.data;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    });\n  };\n};\nexport const createBlog = blogObject => {\n  return async dispatch => {\n    const newBlog = await blogService.create(blogObject);\n    console.log(newBlog);\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog\n    });\n  };\n};\nexport const addLike = blogObject => {\n  return async dispatch => {\n    const updatedBlog = await blogService.update(blogObject);\n    dispatch({\n      type: 'ADD_LIKE',\n      data: updatedBlog\n    });\n  };\n};\nexport const deleteBlog = blogObject => {\n  return async dispatch => {\n    await blogService.remove(blogObject);\n    dispatch({\n      type: 'DELETE_BLOG'\n    });\n  };\n};\nexport const addComment = (id, comment) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.addComment(id, comment);\n    dispatch({\n      type: 'ADD_COMMENT',\n      data: updatedBlog\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/home/alisa/fullstack/osa7/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","blogReducer","state","action","type","concat","data","map","blog","id","initializeBlogs","dispatch","blogs","getAll","createBlog","blogObject","newBlog","create","console","log","addLike","updatedBlog","update","deleteBlog","remove","addComment","comment"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,UAAL;AACE,aAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,IAApB,CAAP;;AACF,SAAK,YAAL;AACEJ,MAAAA,KAAK,GAAGC,MAAM,CAACG,IAAf;AACA,aAAOJ,KAAP;;AACF,SAAK,UAAL;AACE,aAAOA,KAAK,CAACK,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,IAAP,CAAYG,EAAxB,GAA6BN,MAAM,CAACG,IAApC,GAA2CE,IADtC,CAAP;;AAEF,SAAK,aAAL;AACE,aAAON,KAAK,CAACK,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,IAAP,CAAYG,EAAxB,GAA6BN,MAAM,CAACG,IAApC,GAA2CE,IADtC,CAAP;;AAEF,SAAK,aAAL;AACE,aAAON,KAAP;;AACF,SAAK,UAAL;AACEA,MAAAA,KAAK,GAAGC,MAAM,CAACG,IAAf;AACA,aAAOJ,KAAP;;AACF;AACE,aAAOA,KAAP;AAlBF;AAoBD,CArBD;;AAuBA,OAAO,MAAMQ,eAAe,GAAG,MAAM;AACnC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMZ,WAAW,CAACa,MAAZ,EAApB;AACAF,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,YADC;AAEPE,MAAAA,IAAI,EAAEM;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAIC,UAAD,IAAgB;AACxC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMK,OAAO,GAAG,MAAMhB,WAAW,CAACiB,MAAZ,CAAmBF,UAAnB,CAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAL,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,UADC;AAEPE,MAAAA,IAAI,EAAEU;AAFC,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAMI,OAAO,GAAIL,UAAD,IAAgB;AACrC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMU,WAAW,GAAG,MAAMrB,WAAW,CAACsB,MAAZ,CAAmBP,UAAnB,CAA1B;AACAJ,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,UADC;AAEPE,MAAAA,IAAI,EAAEe;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAIR,UAAD,IAAgB;AACxC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMX,WAAW,CAACwB,MAAZ,CAAmBT,UAAnB,CAAN;AACAJ,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GALD;AAMD,CAPM;AASP,OAAO,MAAMqB,UAAU,GAAG,CAAChB,EAAD,EAAKiB,OAAL,KAAiB;AACzC,SAAO,MAAMf,QAAN,IAAkB;AACvB,UAAMU,WAAW,GAAG,MAAMrB,WAAW,CAACyB,UAAZ,CAAuBhB,EAAvB,EAA2BiB,OAA3B,CAA1B;AACAf,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,aADC;AAEPE,MAAAA,IAAI,EAAEe;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAWP,eAAepB,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_BLOG':\n    return state.concat(action.data)\n  case 'INIT_BLOGS':\n    state = action.data\n    return state\n  case 'ADD_LIKE':\n    return state.map(blog =>\n      blog.id === action.data.id ? action.data : blog)\n  case 'ADD_COMMENT':\n    return state.map(blog =>\n      blog.id === action.data.id ? action.data : blog)\n  case 'DELETE_BLOG':\n    return state\n  case 'SET_BLOG':\n    state = action.data\n    return state\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const createBlog = (blogObject) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(blogObject)\n    console.log(newBlog)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog\n    })\n  }\n}\n\nexport const addLike = (blogObject) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.update(blogObject)\n    dispatch({\n      type: 'ADD_LIKE',\n      data: updatedBlog\n    })\n  }\n}\n\nexport const deleteBlog = (blogObject) => {\n  return async dispatch => {\n    await blogService.remove(blogObject)\n    dispatch({\n      type: 'DELETE_BLOG'\n    })\n  }\n}\n\nexport const addComment = (id, comment) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.addComment(id, comment)\n    dispatch({\n      type: 'ADD_COMMENT',\n      data: updatedBlog\n    })\n  }\n}\n\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}